<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.LeaveMsgSDao">
    <resultMap id="BaseResultMap" type="com.blog.domain.LeaveMsg">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="message" property="message" jdbcType="LONGVARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="times" property="times" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insert" parameterType="com.blog.domain.LeaveMsg">
insert into message (id, name, message, email, times) values
(#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},#{message,jdbcType=LONGVARCHAR}, #{email,jdbcType=VARCHAR},#{times,jdbcType=TIMESTAMP})
  </insert>

    <select id="queryAll" resultMap="BaseResultMap">
    select *
    from message
    ORDER BY id DESC
    LIMIT #{offset}, #{limit}
  </select>

    <select id="queryAllMsg" resultMap="BaseResultMap">
    select *
    from message
    ORDER BY id DESC
  </select>

    <update id="updateByPrimaryKey" parameterType="com.blog.domain.LeaveMsg">
    update message
    set article_id = #{articleId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      message=#{message,jdbcType=LONGVARCHAR},
      email = #{email,jdbcType=VARCHAR},
      times = #{times,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="countAllNum" resultType="java.lang.Integer">
    SELECT count(*) FROM message
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from message
    where id = #{id,jdbcType=BIGINT}
  </delete>

</mapper>